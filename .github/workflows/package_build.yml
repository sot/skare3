name: Build Ska Package
on:
  workflow_call:
    inputs:
      repository:
        description: Repository to build from
        required: false
        type: string
        default: ${GITHUB_REPOSITORY}
      tag:
        description: tag/ref/commit-sha
        required: false
        type: string
        default: ${GITHUB_SHA}
      noarch:
        description: Does not build arch-specific packages
        required: false
        type: boolean
        default: false
      python_version:
        description: Python version
        required: false
        type: string
        default: "3.10"
      numpy_version:
        description: Numpy version
        required: false
        type: string
        default: "1.21"
      miniconda_version:
        description: Miniconda version
        required: false
        type: string
        default: py39_4.12.0
      skare3_branch:
        description: Branch of skare3
        required: false
        type: string
        default: master
    secrets:
      CONDA_PASSWORD:
        required: true
      CHANDRA_XRAY_TOKEN:
        required: true
      token:
        required: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: Build on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-2019"]
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Fetch
      uses: actions/checkout@v2
    - name: Fetch Skare3
      uses: actions/checkout@v2
      with:
        repository: sot/skare3
        ref: ${{ inputs.skare3_branch }}
        path: skare3
    - name: Fetch Skare3-tools
      uses: actions/checkout@v2
      with:
        repository: sot/skare3_tools
        ref: master
        path: skare3_tools
    - uses: conda-incubator/setup-miniconda@v3
      with:
        # mamba-version: "*"
        auto-update-conda: true
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
        python-version: ${{ inputs.python_version }}
        environment-file: ./skare3/build-environment.yml
        channels: https://ska:${{ secrets.CONDA_PASSWORD }}@cxc.cfa.harvard.edu/mta/ASPECT/ska3-conda/flight,conda-forge
    - name: Env List
      run: conda list
    - name: Build Package
      run: |
        arch_arg=`if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then echo; else echo '--arch-specific'; fi`
        python skare3_tools/actions/build/files/build.py $arch_arg ${{ inputs.repository }} --tag ${{ inputs.tag }} --python ${{ inputs.python_version }} --numpy ${{ inputs.numpy_version }} --skare3-branch ${{ inputs.skare3_branch }}
      env:
        CONDA_PASSWORD: ${{ secrets.CONDA_PASSWORD }}
        GIT_USERNAME: chandra-xray
        GIT_ASKPASS: ${{ github.workspace }}/skare3_tools/actions/build/files/git_pass.py
        GIT_PASSWORD: ${{ secrets.CHANDRA_XRAY_TOKEN }}
    - name: Save package
      uses: actions/upload-artifact@v2.2.4
      with:
        name: conda-package
        path: |
          builds/noarch/
          builds/linux-64/
          builds/osx-64/
          builds/win-64/
          !builds/*/*repodata*
          !builds/*/index.html
